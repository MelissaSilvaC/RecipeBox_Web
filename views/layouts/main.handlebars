<!DOCTYPE html>
<html lang="pt-br">

<head>
     <meta charset="UTF-8">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <title>RecipeBox</title>
     <!-- Fontes -->
     <link rel="preconnect" href="https://fonts.googleapis.com">
     <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
     <link href="https://fonts.googleapis.com/css2?family=ABeeZee:ital@0;1&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
          rel="stylesheet">
     <link href="/css/styles.css" rel="stylesheet">
</head>

<body class="bg-light-background font-body">
     <header class="bg-light-surface-variant flex items-center text-light-primary-fixed font-medium px-10 py-8">
          <a class="flex flex-1 items-center" href="/" >
               <img src="/icons/box_fill.svg" alt="RecipeBox Logo">
               <p class="font-display text-2xl">Recipe Box</p>
          </a>
          <nav class="flex items-center space-x-6">
               <button class="bg-light-tertiary-container text-white py-1 px-2 rounded-md hover:bg-light-tertiary-container/80"><a
                         href="/create">Nova Receita +</a></button>
               <ul class="flex space-x-6">
                    <a href="/">
                         <li class="hover:text-light-primary">Feed</li>
                    </a>
                    <a href="/library">
                         <li class="hover:text-light-primary">Minha Biblioteca</li>
                    </a>
               </ul>
               <section class="relative">
                    <img id="profileIcon" src="/icons/profile.svg" alt="RecipeBox User" class="cursor-pointer">
               
                    <!-- Menu de opções -->
                    <div id="profileMenu" class="hidden absolute right-0 mt-2 w-48 bg-white border border-gray-300 rounded-md shadow-md">
                         <div class="flex px-4 py-2 items-center border-b border-gray-300">
                              <p class="text-gray-500 text-sm">User: </p>
                              <p id="userName" class="pl-2 text-sm text-gray-700 font-medium ">
                                   <!-- Nome do usuário -->
                              </p>
                         </div>
                         <button id="logoutButton" class="block w-full px-4 py-2 text-left text-sm text-gray-700 hover:bg-gray-100">
                              Sair
                         </button>
                    </div>
               </section>
          </nav>
     </header>
     <main class="flex items-center justify-center">
          <div class="flex flex-col w-full max-w-3xl min-w-[400px] p-4 mt-8">
               {{{body}}}
          </div>
     </main>
</body>
<script>
     document.addEventListener("DOMContentLoaded", () => {
          const profileIcon = document.getElementById("profileIcon");
          const profileMenu = document.getElementById("profileMenu");
          const userName = document.getElementById("userName");
          const logoutButton = document.getElementById("logoutButton");

          // Função para buscar os dados do usuário
          const fetchUserData = async () => {
               try {
                    const response = await fetch('/me', { credentials: 'include' }); // Garante que o cookie será enviado
                    if (response.ok) {
                         const user = await response.json();
                         userName.textContent = user.name || "Usuário Anônimo";
                    } else {
                         console.error("Erro ao buscar dados do usuário.");
                    }
               } catch (error) {
                    console.error("Erro ao conectar com o backend:", error);
               }
          };

          fetchUserData(); // Executa a função ao carregar a página

          // Alterna a visibilidade do menu ao clicar no ícone de perfil
          profileIcon.addEventListener("click", () => {
               profileMenu.classList.toggle("hidden");
          });

          // Faz logout ao clicar no botão
          logoutButton.addEventListener("click", async () => {
               try {
                    const response = await fetch('/logout', { method: 'GET', credentials: 'include' });
                    if (response.ok) {
                         window.location.href = '/login'; // Redireciona para a página de login
                    } else {
                         console.error("Erro ao fazer logout.");
                    }
               } catch (error) {
                    console.error("Erro ao conectar com o backend:", error);
               }
          });

          // Fecha o menu ao clicar fora dele
          document.addEventListener("click", (event) => {
               if (!profileMenu.contains(event.target) && !profileIcon.contains(event.target)) {
                    profileMenu.classList.add("hidden");
               }
          });
     });
</script>
</html>